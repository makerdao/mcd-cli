#!/usr/bin/env bash
### mcd-flaps -- Flap auction management
### Usage: mcd flaps [<id>] [<command>]
###
### Commands: ls                    List recent flap auctions
###           beg                   Minimum bid increase
###           ttl                   Max bid lifetime
###           end                   Max auction duration
###           count                 Total auction count
###           <id>                  View auction status
###           <id> tend <lot> <bid> Submit a bid (increasing bid amount)
###           <id> deal             Settle
set -e
shopt -s extglob

case $1 in
  ls) {
    export ETH_BLOCK=${ETH_BLOCK:-$(mcd --from-block)}
    sig="Kick(uint256,uint256,uint256)"
    sig=$(seth keccak "$(seth --from-ascii $sig)")
    seth logs "${MCD_FLAP?}" "$sig" |
      while read -r log; do
        tx=$(jshon -e transactionHash -u <<<"$log")
        block=$(seth --to-dec "$(jshon -e blockNumber -u <<<"$log")")
        data=$(jshon -e data -u <<<"$log")

        echo "id $(seth --to-dec "${data:2:64}")"
        echo "lot $(mcd --to-wad "${data:66:64}")"
        echo "bid $(mcd --to-rad "${data:130:64}")"
        echo "tx: $tx";
        echo "block: $block";
        echo
      done
  };;
  beg) {
    mcd --to-wad "$(seth call "${MCD_FLAP?}" 'beg()')"
  };;
  ttl) {
    seth call "${MCD_FLAP?}" 'ttl()(uint48)'
  };;
  tau) {
    seth call "${MCD_FLAP?}" 'tau()(uint48)'
  };;
  count) {
    seth call "${MCD_FLAP?}" 'kicks()(uint48)'
  };;
  +([[:digit:]]) ) {
    mcd-flaps-cmd "${@}"
  };;
  *) {
    mcd help flaps
  };;
esac
